{
  "swagger": "2.0",
  "info": {
    "title": "demo.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Demo"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/repo": {
      "post": {
        "operationId": "Demo_createRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demoCreateRepoReq"
            }
          }
        ],
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/repo/all": {
      "get": {
        "operationId": "Demo_getAllRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoGetAllRepoRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/repo/results/{name}": {
      "get": {
        "operationId": "Demo_getScanResults",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoGetScanResultResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/repo/trigger/{name}": {
      "get": {
        "operationId": "Demo_triggerScan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/repo/{name}": {
      "get": {
        "operationId": "Demo_getRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoGetRepoResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Demo"
        ]
      },
      "delete": {
        "operationId": "Demo_deleteRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Demo"
        ]
      },
      "put": {
        "operationId": "Demo_updateRepo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/rule": {
      "post": {
        "operationId": "Demo_addRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demoAddRule"
            }
          }
        ],
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/rule/all": {
      "get": {
        "operationId": "Demo_getAllRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoGetAllRulesRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/rule/{id}": {
      "delete": {
        "operationId": "Demo_deleteRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Demo"
        ]
      },
      "put": {
        "operationId": "Demo_editRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "severity": {
                  "type": "string"
                },
                "stringCompare": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Demo"
        ]
      }
    },
    "/v1/test": {
      "get": {
        "operationId": "Demo_helloWorld",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demoResponseMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Demo"
        ]
      }
    }
  },
  "definitions": {
    "VulnerabilityMetaData": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      }
    },
    "demoAddRule": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "stringCompare": {
          "type": "string"
        }
      }
    },
    "demoCreateRepoReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "demoGetAllRepoRes": {
      "type": "object",
      "properties": {
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demoGetRepoResp"
          }
        }
      }
    },
    "demoGetAllRulesRes": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demoRule"
          }
        }
      }
    },
    "demoGetRepoResp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "demoGetScanResultResp": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demoResult"
          }
        }
      }
    },
    "demoResponseMessage": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        }
      }
    },
    "demoResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        },
        "findings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demoVulnerability"
          }
        },
        "queueAt": {
          "type": "string",
          "format": "int64"
        },
        "scanningAt": {
          "type": "string",
          "format": "int64"
        },
        "finishedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "demoRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "stringCompare": {
          "type": "string"
        }
      }
    },
    "demoVulnerability": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/demoVulnerabilityLocation"
        },
        "metadata": {
          "$ref": "#/definitions/VulnerabilityMetaData"
        }
      }
    },
    "demoVulnerabilityLocation": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "line": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
